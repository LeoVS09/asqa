apiVersion: v1
kind: Service
metadata:
  name: answer
  labels:
    app: answer
    tier: backend
    solution: asqa
    app.kubernetes.io/name: answer
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: asqa
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: answer
    tier: backend
    solution: asqa
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: answer
  labels:
    tier: backend
    solution: asqa
    app.kubernetes.io/name: answer
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: asqa
spec:
  replicas: 1
  revisionHistoryLimit: 3
  serviceName: answer
  selector:
    matchLabels:
      app: answer
      tier: backend
      solution: asqa
  volumeClaimTemplates:
  - metadata:
      name: answer-models-cache-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
  template:
    metadata:
      labels:
        app: answer
        tier: backend
        solution: asqa
    spec:
      containers:
      - image: leovs09/asqa-answer:latest # will be set for specific environment
        name: asqa-answer
        imagePullPolicy: IfNotPresent

        resources:
          requests:
            cpu: 2
            memory: 4G
            ephemeral-storage: "4Gi"
          limits:
            cpu: 4
            memory: 6G
            ephemeral-storage: "6Gi"
          
        ports:
        - name: main-port
          containerPort: 8080
        - name: health-port
          containerPort: 5001

        volumeMounts:
        - mountPath: "/bentoml"
          name: answer-models-cache-storage
        
        env:
        - name: BENTOML_PORT
          value: '8080'
        - name: BENTOML_GUNICORN_WORKERS
          value: '1'
        - name: BENTOML_HOME
          value: '/bentoml'
        - name: SERVICE_NAME
          value: AnswerService:20210907021904_F7A394
        - name: YATAI_URL       
          value: yatai-service:50051
      
        livenessProbe:
          httpGet:
            path: /livez
            port: health-port
          initialDelaySeconds: 3
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /livez
            port: health-port
          initialDelaySeconds: 3
          periodSeconds: 5

        startupProbe:
          httpGet:
            path: /livez
            port: health-port
          failureThreshold: 30
          periodSeconds: 40 # 30 * 40 = 1200s = 20m for start
      
      - image: leovs09/asqa-answer2gql:latest # will be set for specific environment
        name: asqa-answer2gql
        
        resources:
          requests:
            cpu: 1
            memory: 128M
          limits:
            cpu: 1
            memory: 256G
          
        ports:
        - name: main-port
          containerPort: 80
        
        env:
        - name: PORT
          value: '80'
        - name: ANSWER_URL
          value: 'http://127.0.0.1:8080'
        
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: main-port
      
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: main-port

        startupProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: main-port
          failureThreshold: 10
          periodSeconds: 3 # 10 * 3 = 30s for start
      
      imagePullSecrets:
      - name: docker-hub-creds
