apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka
  labels:
    tier: database
    solution: asqa
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: asqa
spec:
  kafka:
    replicas: 1
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: external
        port: 9094
        type: nodeport
        tls: false
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 10Gi
        deleteClaim: false
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
  zookeeper:
    replicas: 1
    storage:
      type: persistent-claim
      size: 10Gi
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: message.from.user.v1
  labels:
    strimzi.io/cluster: "kafka"
    solution: asqa
spec:
  partitions: 1
  replicas: 1
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: message.to.user.v1
  labels:
    strimzi.io/cluster: "kafka"
    solution: asqa
spec:
  partitions: 1 # telegram integration not support scaling
  replicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  labels:
    tier: frontend
    solution: infrustructure
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/version: latest
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: asqinfrustructurea
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: kafka-ui
      tier: frontend
      solution: infrustructure
  template:
    metadata:
      labels:
        app: kafka-ui
        tier: frontend
        solution: infrustructure
    spec:
      containers:
      - image: obsidiandynamics/kafdrop:latest
        name: kafdrop
        imagePullPolicy: IfNotPresent

        resources:
          requests:
            cpu: 1
            memory: 512M
          limits:
            cpu: 1
            memory: 1G
          
        ports:
        - name: main-port
          containerPort: 9000
        
        env:
        - name: KAFKA_BROKERCONNECT
          value: 'kafka-kafka-bootstrap:9092'
        
---      
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  labels:
    app: kafka-ui
    tier: frontend
    solution: infrustructure
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/version: latest
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: infrustructure
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: kafka-ui
    tier: frontend
    solution: infrustructure
